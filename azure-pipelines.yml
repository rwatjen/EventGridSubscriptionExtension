
trigger:
- development
- master

variables:
  extensionVisibility: 'private'
  # The extension identifiers are set to non-default values on non-master branch builds
  extensionTag: ''
  extensionName: 'Event Grid Subscription Extension'
  extensionId: 'EventGridSubscriptionExtension'

pool:
  vmImage: 'ubuntu-latest'

steps:

- task: PowerShell@2
  displayName: 'Configure version and extension visibility'
  inputs:
    targetType: 'inline'
    script: |
      $fileContents = Get-Content .\versioninfo.json -Raw
      $versionInfo = ConvertFrom-Json $fileContents
      $vsixVersion = $versionInfo.version + ".$(Build.BuildId)"
      Write-Host "##vso[task.setvariable variable=vsixVersion]$vsixVersion"
      if ("$(Build.SourceBranchName)" -eq "master") {
        Write-Host "##vso[task.setvariable variable=extensionVisibility]public"
      } else {
        Write-Host "##vso[task.setvariable variable=extensionVisibility]private"
        $extensionId = "$(extensionId)-$(Build.SourceBranchName)"
        $extensionId = $extensionId.SubString(0, [math]::min(63, $extensionId.length))
        Write-Host "##vso[task.setvariable variable=extensionId]"
        Write-Host "##vso[task.setvariable variable=extensionName]$(extensionName) - $(Build.SourceBranchName)"
      }

- task: TfxInstaller@2
  inputs:
    version: 'v0.7.x'

- task: PackageAzureDevOpsExtension@2
  inputs:
    rootFolder: 'src'
    outputPath: '$(Pipeline.Workspace)/output/RasmusWatjen.EventGridSubscriptionExtension-$(vsixVersion).vsix'
    extensionVersion: '$(vsixVersion)'
    updateTasksVersion: true
    extensionId: '$(extensionId)'
    extensionVisibility: '$(extensionVisibility)'
    extensionTag: '$(extensionTag)'
    extensionName: '$(extensionName)'

- task: PublishAzureDevOpsExtension@2
  inputs:
    connectTo: 'VsTeam'
    connectedServiceName: 'VS Marketplace'
    fileType: 'vsix'
    vsixFile: '$(Pipeline.Workspace)/output/RasmusWatjen.EventGridSubscriptionExtension-$(vsixVersion).vsix'
    updateTasksVersion: false
